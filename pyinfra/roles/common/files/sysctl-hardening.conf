# General system hardening
# see: https://madaidans-insecurities.github.io/guides/linux-hardening.html
# see: https://wiki.archlinux.org/title/Security


# Kernel Protection

# Disable dmesg access for non-root users
kernel.dmesg_restrict = 1
# Hide kernel pointers from userspace
kernel.kptr_restrict = 2

# Disable kexec support (we're not using it)
kernel.kexec_load_disabled = 1

# Enable BPF JIT hardening
net.core.bpf_jit_harden = 2
# Disable unprivileged BPF access (locked, meaning this cannot be changed without a reboot)
kernel.unprivileged_bpf_disabled = 1

# Restrict autoloading of TTY line diciplines (legacy feature, commonly abused)
dev.tty.ldisc_autoload = 0

# Restrict access to userfaultfd syscall (commonly abused)
vm.unprivileged_userfaultfd = 0

# Disable unprivileged user namespaces (note that some container runtimes depend on this feature)
kernel.unprivileged_userns_clone = 0

# Restrict access to kernel performance events
kernel.perf_event_paranoid = 3

# note: sysrq support is left alone, in case hypervisors utilize it for VM management


# Networking

# Disable IPv6 support (since we're not using it)
net.ipv6.conf.*.disable_ipv6 = 1

# Enable strict reverse path filtering (to prevent IP spoofing)
net.ipv4.conf.*.rp_filter = 1
# Ignore ICMP redirect messages
net.ipv4.conf.*.accept_redirects = 0
# Protect against time-wait assassination
net.ipv4.tcp_rfc1337 = 1


# User-space

# Require elevated privileges for ptrace
kernel.yama.ptrace_scope = 2

# Increase ASLR entropy
vm.mmap_rnd_bits = 32  # default: 28
vm.mmap_rnd_compat_bits = 16  # default: 8

# Prevent some data spoofing attacks
fs.protected_fifos = 2
fs.protected_regular = 2
